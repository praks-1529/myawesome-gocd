format_version: 3

pipelines:
  myawesome-service-1-build-dev:
    group: TEAMNAME
    materials:
      mygit:
        git: https://github.com/praks-1529/myawesome.git
        branch: develop
    environment_variables:
      DOCKER_REGISTRY: 479580041174.dkr.ecr.ap-south-1.amazonaws.com
      IMAGE_NAME: myawesome-service-1
    stages:
    - build:
        clean_workspace: true
        jobs:
          build:
            elastic_profile_id: myawesome-java-8
            artifacts:
            - build:
                source: image_ref
            tasks:
            - exec:
                command: bash
                arguments:
                - "-c"
                - "mvn clean package"
            - exec:
                command: bash
                arguments:
                - "-c"
                - "mvn clean package -Dspring.profiles.active=docker"
            - exec:
                command: bash
                arguments:
                - "-c"
                - "mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec > version.txt"
            - exec:
                command: bash
                arguments:
                - "-c"
                - "echo ${DOCKER_REGISTRY}/${IMAGE_NAME}:v`git rev-list HEAD --count`.0 > image_ref"
            - exec:
                command: bash
                arguments:
                - "-c"
                - "eval $(aws ecr get-login --no-include-email --region ap-south-1) && docker build --build-arg version=`cat version.txt` -t `cat image_ref` ."
            - exec:
                command: bash
                arguments:
                - "-c"
                - "eval $(aws ecr get-login --no-include-email --region us-east-1) && docker push `cat image_ref`"
            - exec:
                command: bash
                arguments:
                - "-c"
                - "cat image_ref"

  myawesome-service-1-in-dev-aps1:
    group: TEAMNAME
    parameters:
      aws_profile: dev
      region_short: aps1
      region: ap-south-1
      component_name: myawesome-service-1
      manifest_file: deployment-manifest.json
      env: dev
      prod_market: in
      upstream_build_pipeline: "myawesome-service-1-build-dev"
    materials:
      upstream:
        pipeline: myawesome-service-build-dev
        stage: build
      mygit:
        git: https://github.com/praks-1529/myawesome.git
        branch: develop
    stages:
      - terraform-plan: &terraform-plan
          clean_workspace: true
          jobs:
              deploy:
                elastic_profile_id: "terraform-#{env}"
                artifacts:
                - build:
                    source: terraform/tf_plan_output.txt
                environment_variables:
                  AWS_PROFILE: "#{aws_profile}"
                  REGION: "#{region}"
                  COMPONENT_NAME: "#{component_name}"
                  ENV: "#{env}"
                  PROD_MARKET: "#{prod_market}"
                  TF_EXE: "terraform"
                tasks:
                  - exec:
                      command: bash
                      working_directory: terraform
                      arguments:
                        - "-c"
                        - "AWS_PROFILE=#{aws_profile} ./tf_plan.sh > tf_plan_output.txt"
                        
      - terraform-apply: &terraform-apply
          clean_workspace: true
          jobs:
              deploy:
                elastic_profile_id: "terraform-#{env}"
                artifacts:
                - build:
                    source: terraform/env.sh
                environment_variables:
                  AWS_PROFILE: "#{aws_profile}"
                  REGION: "#{region}"
                  COMPONENT_NAME: "#{component_name}"
                  ENV: "#{env}"
                  PROD_MARKET: "#{prod_market}"
                  TF_EXE: "terraform"
                tasks:
                  - exec:
                      command: bash
                      working_directory: terraform
                      arguments:
                        - "-c"
                        - "AWS_PROFILE=#{aws_profile} ./tf_apply.sh"
                  - exec:
                      command: bash
                      working_directory: terraform
                      arguments:
                        - "-c"
                        - "./tf_gen_env.sh > env.sh"
